install.packages('cowsay')
library(cowsay)

say('hello',by= 'cat')
say('hello',by='snowman')
say('hello',by='ant')

byNameList=c('cat','rabbit','random')

for (byName in byNameList){
     say('hello',by=byName)
}

for (index in 1:length(byNameList)){
     say('hello',by=byNameList[index])
}
#-------------------------------------
install.packages('reshape2')
library(reshape2)

#식당관련자료의 tip(팁)자료 분석 

str(tips) 
unique(tips$day)
head(tips)  

# 자료 파악: 변수의 성격과 해설
# total_bill : 전체지불비용
# tip : tip비용
# sex : 성별
# smoker: 흡연석/비흡연석 
# day : 요일
# time : 방문시간
# size : 방문인원 

sum(is.na(tips))

#######################################
### 가설과 검증
### 
######################################
# 1번가설: 성별(독립변수)에 따른 tips(종속변수,y값,레이블)의 비용은 같다 
#         0가설(귀무가설)
          검증을 통해서 비용은 같다 => 귀무가설 채택
          비용이 다르다 => 귀무가설 기각/대립가설 선택 
          pvalue를 통해서 확인함(통계에서)
일반적인 가설검증은 데이터집계를 통해서 비교


table(tips[,3]) #성별의 빈도수, 전체 데이터에서 발생 횟수 (도수분포표) 
table(tips[,4])

for (i in 3:7) {
       print(paste('---',names(tips)[i],'---'))
       print(table(tips[,i]))
}

x=unique(tips$time)
x
din = subset(tips,time=='Dinner') 
lun = subset(tips,time=='Lunch') 
table(tips$time)
table(din$day)
table(lun$day)

#head(din) 문자와 숫자데이터 혼용되어있음 숫자데이터만 추출하여 합하면 행과열의 합계를 구할 수 있음
head(din)

#colMeans 함수를 사용하여 열의 평균을 구할 수 있음 
colMeans(din[c('total_bill','tip','size')])
colMeans(lun[c('total_bill','tip','size')])

colSums(din[c('total_bill','tip','size')])
colSums(lun[c('total_bill','tip','size')])



#plot을 이용하여 편차와 분산을 확인 할 수 있다
par(mfrow=c(2,1))
plot(din$tip)
plot(lun$tip)

#summary로 mean확인 
summary(lun)

summary(tips)

summary(lun)

#금요일만 뽑아서 확인
tmp=subset(tips,tips$day=='Fri')
table(tmp$size)

summary(subset(tips,tips$day=='Fri'))


#성별에 따라 tip의 차이가 있지만, 최종적으로 영향을 가장미치는것은 인원수
#성별 뽑아서 확인
#tips 성별별 빈도수 확인 
table(tips[,3])

s.M=subset(tips,tips$sex=='Male')
s.F=subset(tips,tips$sex=='Female')
summary(s.M)
summary(s.F)

#여자고객이 남자고객보다 대단위 인원으로 옴! 
par(mfrow=c(2,1))
plot(s.F$tip,main='F - Tips')
plot(s.M$tip,main='M - Tips')


plot(s.F$tip,main='F sum of Tips')
plot(s.M$tip,main='M sum of Tips')

#------------------------------------------------

#plot 데이터 분석

plot(tips[,1])
plot(tips[,1],tips[,2])
plot(tips[,7],tips[,1])

str(tips)
colNum=c(1,2,7)
par(mfrow=c(3,1))

for (i in colNum){
    plot(tips[,i],main=names(tips)[i])
}


str(tips[,1])
tips[,2]


mtcars
str(mtcars)
plot(mtcars)
plot(mtcars[,c(1,3,5,6)])

#상관계수_특정한 상관 관계의 정도를 수치적으로 나타낸 계수
#피어슨상관계수(-1~1사이값) #0.7이상이면 연관도가 높음

cor(mtcars[,c(1,3,5,6)])

->결과 나왔을 때 mpg=종속변수 / disp,drat,wt= 독립변수(다른변수에 영향을 받지않음)

# 머신러닝(기계학습) 독립변수들과 종속변수의 분석을 통한 예측,분류 

#독립변수(x)끼리는 상관도(x가 커지면 y가 커진다)가 너무 높으면 안됨.
#독립변수가 상관도가 너무 높은 경우를 다중공선성이라함.(하나의 조정이 필요할 경우)
#다중 공선성은 VIF(분산팽창지수:다중공선성을 확인하기위한 수학)로 10이상 나오는 것을 의미 
#이런경우 X변수를 제거하고,VIF보고, X변수 제거하고 VIF보고


install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(mtcars, histogram=TRUE, pch=19)


tmp=tips[,c(2,1,7)] #상관도분석을 위한 숫자로 변경
chart.Correlation(tmp, histogram=TRUE, pch=19)

#문자변수는 불가. 숫자로바꾸는 방법론은? (아직배우지않음)


#머신러님(기계가 학습하여 모델을 생성하고 새로운 데이터를 예측하거나 분류)
#그 중 사진,오디오,비디오 등의 비정형 데이터는 양이 엄청많음.
#이러한 비정형데이터에 특화된 분석은 인공신경망을 이용하고 이를 인공지능(딥러닝)이라한다.


#이상치값 도출
boxplot(tips$tip)
tt=subset(tips,tip<=6)
tt

#이상치값 도출하지않기
boxplot(tips$tip)
tt=subset(tips,tip<5)
summary(tt)
boxplot(tt$tip)


str(tips)
boxplot (tip~day, data=tips)

tmp=subset(tips,day=='Fri')
par(mfrow=c(2,2))
boxplot(tip~size, data=tmp)
boxplot(tip~sex, data=tmp)
boxplot(tip~smoker, data=tmp)
boxplot(tip~time, data=tmp)



-----------------------
par(mfrow=c(2,1))


#기어의 수에따라 연비분포
boxplot(mtcars$mpg~mtcars$gear) #네모의 가운데 중앙값(검정선)=가장큰값과 작은값의 가운데
plot(mtcars$mpg,mtcars$gear) 
cor(mtcars$mpg,mtcars$gear)
기어수가 4개인 값이 연비가 높은 경향

#엔진형태(vs)에 따른 연비분포
boxplot(mtcars$mpg~mtcars$vs) 
plot(mtcars$mpg,mtcars$vs) 
cor(mtcars$mpg,mtcars$vs)
대체로 1자형엔진(vs=1)이 v자형엔진(vs=0)보다 연비가 높은 경향을 보임


#변속기종류(am)에따른 연비분포
boxplot(mtcars$mpg~mtcars$am) 
plot(mtcars$mpg,mtcars$am) 
cor(mtcars$mpg,mtcars$am)
예상한것 처럼 스틱(am=1)이 오토매틱(am=0)변속기보다 연비가 높은 경햐을 보임 

#자동차의 중량(wt)과 엔진의 힘(hp)간의 관계를 알기위해 
중량이 평균이상인 그룹('high')과 미만인 그룹('low')로 
모델을 나누어 엔진의 힘(hp)에 대한 분포를 알아봅니다. 


# 측정된 수치값보다 그 비율이 중요할 경우에 사용.
# 표준화. scaleing. scale()

boxplot(mtcars)
tmp=scale(mtcars)
summary(tmp)
boxplot(tmp)